{"version":3,"sources":["components/SecondBrain/NoteFa.js","data/SecondBrain/secondBrainFa.js","pages/SecondBrainFa.js"],"names":["Note","data","tags","Object","values","recall","questions","notes","Array","from","summery","className","title","subTitle","map","tag","question","note","text","isList","to","link","defaultProps","id","date","sections","getId","useParams","getData","SecondBrainFa","Main","description","dir","sec"],"mappings":"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","file":"static/js/14.79eafb87.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Note({ data }) {\n  const tags = Object.values(data.recall.tags);\n  const questions = Object.values(data.recall.questions);\n  const notes = Array.from(data.notes);\n  const summery = Array.from(data.summery);\n\n  return (\n    <div className=\"note fa\">\n      <div className=\"title fa\">\n        <h3>{data.title}</h3>\n      </div>\n      <div className=\"subtitle\">\n        <p>{data.subTitle}</p>\n      </div>\n      <div className=\"body\">\n        <div className=\"recall-fa\">\n          <h4 className=\"fa\">یادآوری</h4>\n          <h5>تگ :</h5>\n          {tags.map((tag) => (\n            <span key={tag}>{tag}, </span>\n          ))}\n          <br />\n          <br />\n          <h5>سوال :</h5>\n          {questions.map((question) => (\n            <div key={question}>{question} </div>\n          ))}\n        </div>\n\n        <div className=\"context\">\n          <h4>یادداشت</h4>\n          {notes.map((note) => (\n            <div>\n              <div>{note.title}</div>\n              {Object.values(note.text).map((text) => (\n                <div>\n                  {note.isList ? (\n                    <Link to={`${text.link}`} key={`${text.text}`}>\n                      {text.text}\n                    </Link>\n                  ) : (\n                    <div key={`${text.link}`}>{text.text}</div>\n                  )}\n                </div>\n              ))}\n              <br />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"summery\">\n        <h4>خلاصه</h4>\n        {summery.map((note) => (\n          <div>\n            <div>{note.title}</div>\n            {Object.values(note.text).map((text) => (\n              <div>\n                {note.isList ? (\n                  <Link to={`${text.link}`} key={`${text.text}`}>\n                    {text.text}\n                  </Link>\n                ) : (\n                  <div key={`${text.link}`}>{text.text}</div>\n                )}\n              </div>\n            ))}\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    format: PropTypes.oneOf(['ltr', 'rtl']),\n    title: PropTypes.string,\n    subTitle: PropTypes.string,\n    link: PropTypes.string,\n    date: PropTypes.string,\n    recall: PropTypes.arrayOf({\n      tags: PropTypes.arrayOf(PropTypes.string),\n      questions: PropTypes.arrayOf(PropTypes.string),\n    }),\n    notes: PropTypes.arrayOf(\n      PropTypes.shape({\n        isList: PropTypes.bool,\n        title: PropTypes.string,\n        text: PropTypes.arrayOf(\n          PropTypes.shape({\n            text: PropTypes.string,\n            link: PropTypes.string,\n          }),\n        ),\n      }),\n    ),\n    summery: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string,\n        title: PropTypes.string,\n        text: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ),\n  }),\n};\n\nNote.defaultProps = {\n  data: [],\n};\n\nexport default Note;\n","const data = [\n  {\n    id: 1,\n    title: 'این مغز دوم من است!',\n    subTitle:\n      'من سعی می کنم مغز دوم خودم رو در موضوعات اصلی فعالیت هام با فرمت \"نت های کرنل\" ایجا بنویسم. (در حال توسعه)',\n    link: '/secondBrain/1',\n    date: '2021-11-22',\n    recall: {\n      tags: ['مغز دوم', 'کرنل'],\n      questions: ['مغز دوم چیست؟', 'مغز دوم چگونه کار می کند؟'],\n    },\n    notes: [\n      {\n        isList: false,\n        title: 'ایده اصلی',\n        text: [\n          {\n            text: 'در دنیای مدرن اطلاعات ما مورد حجمه مقادیر بسیار زیاد اطلاعات قرار داریم. ما هر روز حجم عظیمی از اطلاعات را دریافت می کنیم.',\n            link: '',\n          },\n          {\n            text: 'ساختن مغز دوم به شما یاد می دهد که چطور:',\n            link: '',\n          },\n          {\n            text: '1-  همواره پروژه ها و اهداف خود را از طریق منظم کردن و نتیجه گرا کردن، به سمت کامل شدن پیش ببرید.',\n            link: '',\n          },\n          {\n            text: '2-  دانش شخصی خود را به درآمد تبدیل کنید, در این راه از رشد سریع دانش اقتصادی خود بهره مند شوید.',\n            link: '',\n          },\n          {\n            text: '3- از روش های غیر معمول و اتصال ایده های مخلتف بهره مند شوید.',\n            link: '',\n          },\n        ],\n      },\n      {\n        isList: true,\n        title: 'فهرست',\n        text: [\n          {\n            text: 'برنامه نویسی',\n            link: '2',\n          },\n          // {\n          //   text: 'study',\n          //   link: '18',\n          // },\n        ],\n      },\n    ],\n    summery: [\n      {\n        isList: false,\n        title: 'امیدوارم این روش کمکی بکنه.',\n        text: [''],\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'موضوعات برنامه نویسی',\n    subTitle: 'Here I try to organize my activites in as a developer',\n    link: '/secondBrain/2',\n    date: '2021-11-25',\n    recall: {\n      tags: ['programming'],\n      questions: ['What`s the journey as a web developer?'],\n    },\n    notes: [\n      {\n        isList: false,\n        title: 'I try to explain main topic of my career as a web developer',\n        text: [\n          {\n            text: '',\n            link: '',\n          },\n        ],\n      },\n      {\n        isList: true,\n        title: 'Topics',\n        text: [\n          // {\n          //   text: 'Dotnet core',\n          //   link: '3',\n          // },\n          // {\n          //   text: 'Angular',\n          //   link: '4',\n          // },\n          // {\n          //   text: 'blockchain',\n          //   link: '5',\n          // },\n          // {\n          //   text: 'Database',\n          //   link: '6',\n          // },\n          // {\n          //   text: 'Design pattern',\n          //   link: '7',\n          // },\n          // {\n          //   text: 'Front-end',\n          //   link: '8',\n          // },\n          // {\n          //   text: 'Git',\n          //   link: '9',\n          // },\n          // {\n          //   text: 'Ionic',\n          //   link: '10',\n          // },\n          // {\n          //   text: 'Linux',\n          //   link: '11',\n          // },\n          // {\n          //   text: 'Nginx',\n          //   link: '12',\n          // },\n          // {\n          //   text: 'Node.js',\n          //   link: '13',\n          // },\n          // {\n          //   text: 'Public Skills',\n          //   link: '14',\n          // },\n          // {\n          //   text: 'Python',\n          //   link: '15',\n          // },\n          // {\n          //   text: 'React',\n          //   link: '16',\n          // },\n          // {\n          //   text: 'Tools',\n          //   link: '17',\n          // },\n        ],\n      },\n    ],\n    summery: [\n      {\n        isList: false,\n        title: '',\n        text: ['', ''],\n      },\n    ],\n  },\n];\n\nexport default data;\n","import { React } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport Note from '../components/SecondBrain/NoteFa';\n\nimport data from '../data/SecondBrain/secondBrainFa';\n\nconst sections = [\n  { title: 'مغز دوم', link: 1 },\n  { title: 'برنامه نویسی', link: 2 },\n];\n\nconst getId = () => {\n  let { id } = useParams();\n  if (id === null) id = '1';\n  return id;\n};\n\nconst getData = () => {\n  const id = getId();\n  const note = data[id - 1];\n  return note;\n};\n\nconst SecondBrainFa = () => (\n  <Main title=\"secondBrain\" description=\"Second brain of Amir Ekbatani\">\n    <article dir=\"rtl\" className=\"post fa\" id=\"secondBrain\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <Link to=\"/secondBrain/1\">مغز دوم</Link>\n          </h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <Link to={`${sec.link}`}>{sec.title}</Link>\n              </h4>\n            ))}\n          </div>\n        </div>\n        <div className=\"lang\">\n          <Link to={`/secondBrainFa/${getId()}`} className=\"button active fa\">فارسی</Link>\n          <Link to={`/secondBrain/${getId()}`} className=\"button\">En</Link>\n        </div>\n      </header>\n      <Note data={getData()} key={getId()} />\n    </article>\n  </Main>\n);\n\nexport default SecondBrainFa;\n"],"sourceRoot":""}