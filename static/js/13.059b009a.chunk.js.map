{"version":3,"sources":["components/SecondBrain/Note.js","data/SecondBrain/secondBrain.js","pages/SecondBrain.js"],"names":["Note","data","tags","Object","values","recall","questions","notes","Array","from","summery","className","title","subTitle","map","tag","question","note","text","isList","to","link","defaultProps","id","format","date","sections","getId","useParams","getData","SecondBrain","Main","description","data-testid","sec"],"mappings":"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","file":"static/js/13.059b009a.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Note({ data }) {\n  const tags = Object.values(data.recall.tags);\n  const questions = Object.values(data.recall.questions);\n  const notes = Array.from(data.notes);\n  const summery = Array.from(data.summery);\n\n  return (\n    <div className=\"note\">\n      <div className=\"title\">\n        <h3>{data.title}</h3>\n      </div>\n      <div className=\"subtitle\">\n        <p>{data.subTitle}</p>\n      </div>\n      <div className=\"body\">\n        <div className=\"recall\">\n          <h4>Recall</h4>\n          <h5>tags :</h5>\n          {tags.map((tag) => (\n            <span key={tag}>{tag}, </span>\n          ))}\n          <br />\n          <br />\n          <h5>questions :</h5>\n          {questions.map((question) => (\n            <div key={question}>{question} </div>\n          ))}\n        </div>\n\n        <div className=\"context\">\n          <h4>Note</h4>\n          {notes.map((note) => (\n            <div>\n              <div>{note.title}</div>\n              {Object.values(note.text).map((text) => (\n                <div>\n                  {note.isList ? (\n                    <Link to={`${text.link}`} key={`${text.text}`}>\n                      {text.text}\n                    </Link>\n                  ) : (\n                    <div key={`${text.link}`}>{text.text}</div>\n                  )}\n                </div>\n              ))}\n              <br />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"summery\">\n        <h4>Summery</h4>\n        {summery.map((note) => (\n          <div>\n            <div>{note.title}</div>\n            {Object.values(note.text).map((text) => (\n              <div>\n                {note.isList ? (\n                  <Link to={`${text.link}`} key={`${text.text}`}>\n                    {text.text}\n                  </Link>\n                ) : (\n                  <div key={`${text.link}`}>{text.text}</div>\n                )}\n              </div>\n            ))}\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    format: PropTypes.oneOf(['ltr', 'rtl']),\n    title: PropTypes.string,\n    subTitle: PropTypes.string,\n    link: PropTypes.string,\n    date: PropTypes.string,\n    recall: PropTypes.arrayOf({\n      tags: PropTypes.arrayOf(PropTypes.string),\n      questions: PropTypes.arrayOf(PropTypes.string),\n    }),\n    notes: PropTypes.arrayOf(\n      PropTypes.shape({\n        isList: PropTypes.bool,\n        title: PropTypes.string,\n        text: PropTypes.arrayOf(\n          PropTypes.shape({\n            text: PropTypes.string,\n            link: PropTypes.string,\n          }),\n        ),\n      }),\n    ),\n    summery: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string,\n        title: PropTypes.string,\n        text: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ),\n  }),\n};\n\nNote.defaultProps = {\n  data: [],\n};\n\nexport default Note;\n","const data = [\n  {\n    id: 1,\n    format: 'ltr',\n    title: 'This is my second brain!',\n    subTitle:\n      'I try to create Second Brain in some major topics of my life, in \"Cornell Notes\" format. (under construction)',\n    link: '/secondBrain/1',\n    date: '2021-11-22',\n    recall: {\n      tags: ['secondBrain', 'Cornell'],\n      questions: ['What`s Second brain?', 'How it is working?'],\n    },\n    notes: [\n      {\n        isList: false,\n        title: 'Main idea',\n        text: [\n          {\n            text: 'In the modern world, We are under attach of the informations. We are reciving massive amount of informations every day.',\n            link: '',\n          },\n          {\n            text: 'Building a Second Brain methodology will teach you how to:',\n            link: '',\n          },\n          {\n            text: '1-  Consistently move your projects and goals to completion by organizing and accessing your knowledge in a results-oriented way.',\n            link: '',\n          },\n          {\n            text: '2-  Transform your personal knowledge into income, taking advantage of a rapidly growing knowledge economy.',\n            link: '',\n          },\n          {\n            text: '3-  Uncover unexpected patterns and connections between ideas.',\n            link: '',\n          },\n          {\n            text: '4-  Reduce stress and “information overload” by expertly curating and managing your personal information stream.',\n            link: '',\n          },\n          {\n            text: '5-  Develop valuable expertise, specialized knowledge, and the skills to deploy it in a new job, career, or business.',\n            link: '',\n          },\n          {\n            text: '6-  Cultivate a collection of valuable knowledge and insights over time without having to follow rigid, time-consuming rules.',\n            link: '',\n          },\n          {\n            text: '7-  Unlock the full value of the wealth of learning resources all around you, such as online courses, webinars, books, articles, forums, and podcasts.',\n            link: '',\n          },\n        ],\n      },\n      {\n        isList: true,\n        title: 'Topics',\n        text: [\n          {\n            text: 'programming',\n            link: '2',\n          },\n          // {\n          //   text: 'study',\n          //   link: '18',\n          // },\n        ],\n      },\n    ],\n    summery: [\n      {\n        isList: false,\n        title: 'I hope it helps.',\n        text: [''],\n      },\n    ],\n  },\n  {\n    id: 2,\n    format: 'ltr',\n    title: 'Programming Topics',\n    subTitle: 'Here I try to organize my activites in as a developer',\n    link: '/secondBrain/2',\n    date: '2021-11-25',\n    recall: {\n      tags: ['programming'],\n      questions: ['What`s the journey as a web developer?'],\n    },\n    notes: [\n      {\n        isList: false,\n        title: 'I try to explain main topic of my career as a web developer',\n        text: [\n          {\n            text: '',\n            link: '',\n          },\n        ],\n      },\n      {\n        isList: true,\n        title: 'Topics',\n        text: [\n          // {\n          //   text: 'Dotnet core',\n          //   link: '3',\n          // },\n          // {\n          //   text: 'Angular',\n          //   link: '4',\n          // },\n          // {\n          //   text: 'blockchain',\n          //   link: '5',\n          // },\n          // {\n          //   text: 'Database',\n          //   link: '6',\n          // },\n          // {\n          //   text: 'Design pattern',\n          //   link: '7',\n          // },\n          // {\n          //   text: 'Front-end',\n          //   link: '8',\n          // },\n          // {\n          //   text: 'Git',\n          //   link: '9',\n          // },\n          // {\n          //   text: 'Ionic',\n          //   link: '10',\n          // },\n          // {\n          //   text: 'Linux',\n          //   link: '11',\n          // },\n          // {\n          //   text: 'Nginx',\n          //   link: '12',\n          // },\n          // {\n          //   text: 'Node.js',\n          //   link: '13',\n          // },\n          // {\n          //   text: 'Public Skills',\n          //   link: '14',\n          // },\n          // {\n          //   text: 'Python',\n          //   link: '15',\n          // },\n          // {\n          //   text: 'React',\n          //   link: '16',\n          // },\n          // {\n          //   text: 'Tools',\n          //   link: '17',\n          // },\n        ],\n      },\n    ],\n    summery: [\n      {\n        isList: false,\n        title: '',\n        text: ['', ''],\n      },\n    ],\n  },\n];\n\nexport default data;\n","import { React } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport Note from '../components/SecondBrain/Note';\n\nimport data from '../data/SecondBrain/secondBrain';\n\nconst sections = [\n  { title: 'Second brain', link: 1 },\n  { title: 'Programming', link: 2 },\n];\n\nconst getId = () => {\n  let { id } = useParams();\n  if (id === null) id = '1';\n  return id;\n};\n\nconst getData = () => {\n  const id = getId();\n  const note = data[id - 1];\n\n  // eslint-disable-next-line no-console\n  // console.log(note);\n\n  return note;\n};\n\nconst SecondBrain = () => (\n  <Main title=\"secondBrain\" description=\"Second brain of Amir Ekbatani\">\n    <article className=\"post\" id=\"secondBrain\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <Link to=\"/secondBrain/1\">Second Brain</Link>\n          </h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <Link to={`${sec.link}`}>{sec.title}</Link>\n              </h4>\n            ))}\n          </div>\n        </div>\n      </header>\n      <Note data={getData()} key={getId()} />\n    </article>\n  </Main>\n);\n\nexport default SecondBrain;\n"],"sourceRoot":""}