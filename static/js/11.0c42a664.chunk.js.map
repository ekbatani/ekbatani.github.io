{"version":3,"sources":["components/Contact/EmailLink.js","pages/Contact.js"],"names":["messages","EmailLink","text","useState","idx","updateIter","message","updateMessage","length","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","test","color","onMouseEnter","onMouseLeave","href","Contact","Main","title","description","data-testid","to","ContactIcons"],"mappings":"uKAUMA,EAAW,CACf,KACA,QACA,OACA,iDACA,sCACA,YACA,UACA,oBACA,kDACA,iBACA,qBACA,OACA,QACA,gCACA,UAoEaC,EA/CG,WAChB,IA5CoBC,EA2CE,EAIIC,mBAAS,GAJb,mBAIfC,EAJe,KAIVC,EAJU,OAKWF,mBAASH,EAASI,IAL7B,mBAKfE,EALe,KAKNC,EALM,OAMKJ,mBAASH,EAASI,GAAKI,QAN5B,mBAMfC,EANe,KAMTC,EANS,OAOUP,oBAAS,GAPnB,mBAOfQ,EAPe,KAOLC,EAPK,KA6BtB,OA/CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EACE,WACE,IAAIC,EAASnB,EACToB,EAAUf,EACVA,EAZK,IAYUT,EAASI,GAAKI,SAC/Be,GAAU,EACVC,EAAU,GAERD,IAAWvB,EAASQ,OACtBI,GAAY,IAEZL,EAAcP,EAASuB,GAAQE,MAAM,EAAGD,IACxCnB,EAAWkB,GACXb,EAAWc,EAAU,MAIzBb,EAxBY,GAwBO,MAInB,sBACEe,UAAU,mBACVC,OA3EgBzB,EA2EII,EAxEb,mEACDsB,KAAK1B,IAAyB,IAAhBA,EAAKM,OAuEM,GAAK,CAAEqB,MAAO,QAC7CC,aAAc,kBAAMlB,GAAY,IAChCmB,aAAc,kBAAM3B,EAAMJ,EAASQ,QAAUI,GAAY,IAJ3D,UAME,oBAAGoB,KAAK,iCAAR,UACE,+BAAO1B,IACP,iDAEF,wCACS,mBAAG0B,KAAK,oBAAR,mC,QC1DAC,UAtBC,kBACd,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,YAAY,4DAFd,SAIE,0BAASV,UAAU,OAAOP,GAAG,UAA7B,UACE,iCACE,qBAAKO,UAAU,QAAf,SACE,oBAAIW,cAAY,UAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,WAAT,2BAIN,sBAAKZ,UAAU,WAAf,UACE,iFACA,cAAC,EAAD,OAEF,cAACa,EAAA,EAAD","file":"static/js/11.0c42a664.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = () => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(\n    () => {\n      let newIdx = idx;\n      let newChar = char;\n      if (char - hold >= messages[idx].length) {\n        newIdx += 1;\n        newChar = 0;\n      }\n      if (newIdx === messages.length) {\n        setIsActive(false);\n      } else {\n        updateMessage(messages[newIdx].slice(0, newChar));\n        updateIter(newIdx);\n        updateChar(newChar + 1);\n      }\n    },\n    // disable:\n    isActive ? delay : null,\n  );\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => idx < messages.length && setIsActive(true)}\n    >\n      <a href=\"mailto:amir.ekbatani@gmail.com\">\n        <span>{message}</span>\n        <span>@gmail.com</span>\n      </a>\n      <p>\n        Phone: <a href=\"tel:+989129318724\"> +989129318724</a>\n      </p>\n    </div>\n  );\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/Contact/EmailLink';\nimport ContactIcons from '../components/Contact/ContactIcons';\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description=\"Contact Amir Ekbatani via email @ Amir.Ekbatani@gmail.com\"\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <Link to=\"/contact\">Contact</Link>\n          </h2>\n        </div>\n      </header>\n      <div className=\"email-at\">\n        <p>Feel free to get in touch. You can email me at: </p>\n        <EmailLink />\n      </div>\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"sourceRoot":""}